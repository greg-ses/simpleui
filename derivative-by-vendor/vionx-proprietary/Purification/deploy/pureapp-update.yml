---
# use flag --extra-vars "remupdate=true" to complete the distribution to all VECs.
# Without the flag set the packages are created and copied to the BMS server staging area only.
- hosts: all
  vars:
    app_name: pureapp
  remote_user: "{{ lookup('env', 'REMOTE_WEB_USER') }}"
  tasks:
  - include_vars:
      file: commonvars.yml
  - name: Prep Local Staging Area
    local_action: file path={{ unit_config_source_dir }} state=absent
  - local_action: file path={{ unit_config_source_dir }} state=directory mode=0755
  - name: Prep BMS Target Staging Area
    file:
      path: "{{ bms_stage_dir }}"
      state: directory
      mode: 0777

  - name: Copy Binary To Local Stage Area
    copy: src={{ bms_binary_source_dir }}/{{ bms_app_binary }} dest={{ bms_stage_dir }}/{{ bms_app_binary }}

  - name: Backup Existing Binary
    command: cp /opt/bin/{{ bms_app_binary }} {{ archive_dir }}/{{ bms_app_binary }}{{ archive_suffix }}

  - name: Stop application service
    service:
      name: bms
      state: stopped
    become: true

  - name: Deploy binary
    command: install -D {{ bms_stage_dir }}/{{ bms_app_binary }} /opt/bin/{{ bms_app_binary }}

  - name: Get binary md5
    command: md5sum /opt/bin/{{ bms_app_binary }}
    register: md5output
  - debug: msg="{{ md5output.stdout }}"
  - name: Set executable permissions
    file:
      path: /opt/bin/{{ bms_app_binary }}
      state: file
      mode: 0777

  - name: Start application service
    service:
      name: bms
      state: started
    become: true

  - pause:
      seconds: 20
    # Make sure the bms service app has started
  - name: Confirm BMS is running
    command: systemctl is-active bms
    register: agent_status
    failed_when: "'failed' in agent_status.stdout"
    changed_when: False
