  # DO NOT CALL DIRECTLY - use include-task to consume this module

  - name: Make sure simpleui distributions is UP-TO-DATE.
    local_action: command bash "{{ simpleui_root }}/deploy/is_dist_stale.bash"

  - name: "Remove Web Staging Folder {{ local_stage_dir }} web"
    local_action: file path="{{ local_stage_dir }}" state=absent
    become: true

  - name: "Create Web Staging Folder {{ local_stage_dir }} with mode=0755 owner={{remote_web_user}} group={{remote_web_group}}"
    local_action: "file path=\"{{ local_stage_dir }}\" state=directory mode=0755 owner={{remote_web_user}} group={{remote_web_group}}"
    become: true

  - name: "Create Web Staging Folder {{ local_stage_dir }}/web"
    local_action: "file path=\"{{ local_stage_dir }}/web\" state=directory mode=0755 owner={{remote_web_user}} group={{remote_web_group}}"
    become: true

  - name: "Merge ng-simpleui into derived app {{ web_app_name }}"
    local_action: command "{{ simpleui_root }}/deploy/merge-derived-app.sh" "{{ simpleui_root }}/base_app/dist.tgz" "{{ simpleui_derivative_folder }}"  "{{ local_stage_dir }}/web/{{ web_app_name }}" -d {{ include_mock_data }} -p "{{ nodejs_port }}"
    become: true

  #- name: 'Create local web packaging application'
  #  local_action: script create-bms-web-setup-bundle.sh {{ local_stage_dir }} quiet

  - name: "Copy Parameters app src=\"{{common_web_src}}/html\"  dest=\"{{local_stage_dir}}/web/{{web_app_name}}/\""
    local_action: "copy src=\"{{common_web_src}}/html\"  dest=\"{{local_stage_dir}}/web/{{web_app_name}}/\""
    when: copy_params_app is defined and copy_params_app
    become: true

  - name: "Create common/web/angularjs1-dist.tgz if it doesn't already exist."
    local_action: archive path="{{ common_web_src }}/angularjs" dest="{{ common_web_src }}/angularjs1-dist.tgz"

  - name: "Copy Parameters App dependency from common/web/angularjs"
    local_action: copy src="{{ common_web_src }}/angularjs1-dist.tgz"  dest="{{ local_stage_dir }}/web/{{ web_app_name }}/"
    when: copy_params_app is defined and copy_params_app
    become: true

  - name: "Set name of embedded properties-file-name inside Parameters App file 1 to {{ app_config_props_file }}"
    local_action: replace path="{{ local_stage_dir }}/web/{{ web_app_name }}/html/ParamsApp/Parameters.properties" regexp="BSCServer.properties" replace="{{ app_config_props_file }}"
    when: copy_params_app is defined and copy_params_app and app_config_props_file is defined and app_config_props_file
    become: true

  - name: "Set name of embedded properties-file-name inside Parameters App file 2 to {{ app_config_props_file }}"
    local_action: replace path="{{ local_stage_dir }}/web/{{ web_app_name }}/html/ParamsApp/php/ParamHelper.php" regexp='BSCServer.properties' replace="{{ app_config_props_file }}"
    when: copy_params_app is defined and copy_params_app and app_config_props_file is defined and app_config_props_file
    become: true

  - name: "Set name of embedded web folder name inside Parameters App file 2 to {{ app_config_props_file }}"
    local_action: replace path="{{ local_stage_dir }}/web/{{ web_app_name }}/html/ParamsApp/php/ParamHelper.php" regexp='\/var\/www\/bsc' replace="/var/www/{{ web_app_name }}"
    when: copy_params_app is defined and copy_params_app and app_config_props_file is defined and app_config_props_file
    become: true

  - name: "Set custom web-app list for service (if required)"
    local_action: replace path="{{ local_stage_dir }}/web/{{ web_app_name }}/simpleui-server/{{ web_app_name }}-web.service" regexp='--appName={{ web_app_name }}' replace="--appName={{ web_service_apps_list }}"
    become: true
    when: web_service_apps_list is defined and web_service_apps_list

  # If NOT using a simpleui-server, remove the folder
  - name: "Remove {{ local_stage_dir }}/web/{{ web_app_name }}/simpleui-server/node_modules folder if web_service_apps_list is undefined or false"
    local_action: file path="{{ local_stage_dir }}/web/{{ web_app_name }}/simpleui-server/node_modules" state=absent
    become: true
    when: (web_service_apps_list is undefined) or (not web_service_apps_list)

  - name: "Create the local bundle file {{ web_bundle_file }}"
    local_action: archive path="{{ local_stage_dir }}" dest="/tmp/{{ web_bundle_file }}"

    # -
    # END SECTION - CREATE_LOCAL_ARCHIVE
